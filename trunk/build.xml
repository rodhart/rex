<project name="REX" basedir="." default="jar">
	<property file="build.properties" />
	<property name="src" value="${basedir}/src" />
	<property name="bin" value="${basedir}/bin" />
	<property name="javadoc.dir" value="${basedir}/doc/javadoc" />
	<property name="rex_bin" value="${bin}/edu/udel/cis/cisc475/rex" />
	<property name="rex_src" value="${src}/edu/udel/cis/cisc475/rex" />
	<property name="jar-name" value="REX.jar" />
	<property name="jar-path" value="${basedir}/${jar-name}" />
	<property name="main-class" value="edu.udel.cis.cisc475.rex.REX" />
	<property name="64bit" value="-d64" />
	<property name="exec-name" value="rex" />
	
	<property name="test.src.dir" location="${basedir}/test" />
	<property name="test.bin.dir" location="${basedir}/bin-test" />


	<!-- Junit: automated unit tester Properties  -->

	<property name="junit.dir" location="${basedir}/junit" />
	<property name="junit.data.dir" location="${junit.dir}/data" />
	<property name="junit.reports.dir" location="${junit.dir}/reports" />

	<!-- Cobertura: test coverage analyzer Properties -->

	<property name="cob.log.file" value="${basedir}/cobertura.log" />
	<property name="cob.ser.file" value="${basedir}/cobertura.ser" />
	<property name="cobertura.dir" value="${basedir}/cobertura" />
	<property name="cob.instrumented.dir" value="${cobertura.dir}/instrumented" />
	<property name="cob.reports.dir" value="${cobertura.dir}/reports" />
	<property name="cob.reports.xml.dir" value="${cob.reports.dir}/junit-xml" />
	<property name="cob.reports.html.dir" value="${cob.reports.dir}/junit-html" />
	<property name="cob.coverage.xml.dir" value="${cob.reports.dir}/cobertura-xml" />
	<property name="cob.coverage.html.dir" value="${cob.reports.dir}/cobertura-html" />

	<path id="cobertura.classpath">
		<fileset dir="${cobertura.lib.dir}">
			<include name="cobertura.jar" />
			<include name="lib/**/*.jar" />
		</fileset>
	</path>
	<taskdef classpathref="cobertura.classpath" resource="tasks.properties" />

	<path id="classpath">
		<pathelement location="${src}" />
		<pathelement location="${junit.name}" />
	</path>


	<target name="compile"  description="Compile all java source files.">
		<mkdir dir="${bin}" />
		<javac debug="true" srcdir="${src}" destdir="${bin}" includes="edu/udel/cis/cisc475/rex/**" classpathref="classpath">
		</javac>
	</target>

	<target name="jar" depends="compile" description="Jar all class files into a single file.">
		<jar destfile="${jar-path}" basedir="${bin}">
		</jar>
	</target>


	<target name="clean" description="Delete all generated files.">
		<delete dir="${bin}" />
		<delete file="${jar-path}" />
		<delete dir="${cobertura.dir}" />
		<delete file="${cob.ser.file}" />
		<delete file="${cob.log.file}" />
	</target>

	
	<!-- Plain JUnit tests -->


	<path id="test.compile.classpath">
		<pathelement location="${jar-path}" />
		<pathelement location="${test.src.dir}" />
		<pathelement location="${junit.name}" />
	</path>

	<path id="test.execute.classpath">
		<pathelement location="${jar-path}" />
		<pathelement location="${test.bin.dir}" />
		<pathelement location="${junit.name}" />
	</path>

	<target name="test-init">
		<tstamp>
			<format property="DSTAMP" pattern="d-MMMM-yyyy" timezone="America/New_York" />
			<format property="TODAY" pattern="d-MMMM-yyyy" timezone="America/New_York" />
			<format property="TSTAMP" pattern="d-MMMM-yyyy" timezone="America/New_York" />
		</tstamp>
		<delete dir="${junit.dir}" quiet="true" />
		<delete dir="${examples.bin.dir}" quiet="true" />
		<delete dir="${test.bin.dir}" quiet="true" />
		<mkdir dir="${junit.dir}" />
		<mkdir dir="${junit.data.dir}" />
		<mkdir dir="${junit.reports.dir}" />
		<mkdir dir="${examples.bin.dir}" />
		<mkdir dir="${test.bin.dir}" />
	</target>

	<target name="test-compile" depends="jar,test-init">
		<javac destdir="${examples.bin.dir}" debug="true" includeAntRuntime="true" srcdir="${examples.src.dir}">
			<classpath refid="test.compile.classpath" />
		</javac>
		<javac destdir="${test.bin.dir}" debug="true" includeAntRuntime="true" srcdir="${test.src.dir}">
			<classpath refid="test.compile.classpath" />
		</javac>
	</target>

	<target name="test" depends="test-compile">
		<junit printsummary="false" errorProperty="test.failed" failureProperty="test.failed" fork="true" timeout="300000">
			<jvmarg value="-d64" />
			<jvmarg value="-ea" />
			<jvmarg value="-Djava.library.path=${jni-lib.dir}" />
			<classpath refid="test.execute.classpath" />
			<formatter type="brief" usefile="false" />
			<formatter type="xml" />
			<batchtest todir="${junit.data.dir}">
				<fileset dir="${examples.bin.dir}" includes="**/*Test.class" />
				<fileset dir="${test.bin.dir}" includes="**/*Test.class" />
			</batchtest>
		</junit>
		<junitreport todir="${junit.data.dir}">
			<fileset dir="${junit.data.dir}">
				<include name="TEST-*.xml" />
			</fileset>
			<report format="frames" todir="${junit.reports.dir}" />
		</junitreport>
		<fail message="Tests failed. Check log and/or reports." if="test.failed" />
	</target>


	<!-- Cobertura + JUnit tasks -->

	<target name="cobertura-init" depends="test-compile">
		<delete dir="${cobertura.dir}" quiet="true" />
		<delete file="${cob.ser.file}" quiet="true" />
		<delete file="${cob.log.file}" quiet="true" />
		<mkdir dir="${cobertura.dir}" />
		<mkdir dir="${cob.instrumented.dir}" />
		<mkdir dir="${cob.reports.xml.dir}" />
		<mkdir dir="${cob.reports.html.dir}" />
		<mkdir dir="${cob.coverage.xml.dir}" />
		<mkdir dir="${cob.coverage.html.dir}" />
	</target>

	<target name="cobertura-instrument" depends="cobertura-init">
		<cobertura-instrument todir="${cob.instrumented.dir}">
			<ignore regex="org.apache.log4j.*" />
			<fileset dir="${basedir}">
				<include name="${jar-name}" />
			</fileset>
		</cobertura-instrument>
	</target>

	<path id="instrumented.classpath">
		<pathelement location="${cob.instrumented.dir}/${jar-name}" />
		<pathelement location="${examples.bin.dir}" />
		<pathelement location="${test.bin.dir}" />
		<pathelement location="${antlr3-lib.name}" />
		<pathelement location="${cvc3-lib.name}" />
		<pathelement location="${junit.name}" />
	</path>

	<target name="cobertura-test" depends="cobertura-instrument">
		<junit fork="yes" dir="${basedir}" failureProperty="test.failed">
			<jvmarg value="-d64" />
			<jvmarg value="-Djava.library.path=${jni-lib.dir}" />
			<jvmarg value="-ea" />
			<classpath refid="instrumented.classpath" />
			<classpath refid="cobertura.classpath" />
			<formatter type="xml" />
			<batchtest todir="${cob.reports.xml.dir}">
				<fileset dir="${examples.bin.dir}" includes="**/*Test.class" />
				<fileset dir="${test.bin.dir}" includes="**/*Test.class" />
			</batchtest>
		</junit>
		<junitreport todir="${cob.reports.xml.dir}">
			<fileset dir="${cob.reports.xml.dir}">
				<include name="TEST-*.xml" />
			</fileset>
			<report format="frames" todir="${cob.reports.html.dir}" />
		</junitreport>
	</target>

	<target name="cobertura-html-coverage-report" depends="cobertura-test">
		<cobertura-report destdir="${cob.coverage.html.dir}">
			<fileset dir="${src}">
				<include name="**/*.java" />
			</fileset>
		</cobertura-report>
	</target>

	<target name="cobertura" depends="cobertura-html-coverage-report" />


	<!-- Javadoc Tasks -->

	<path id="javadoc.classpath">
		<pathelement location="${src}" />
		<pathelement location="${antlr3-lib.name}" />
		<pathelement location="${cvc3-lib.name}" />
		<pathelement location="${junit.name}" />
	</path>


	<target name="javadoc">
		<delete dir="${javadoc.dir}" quiet="true" />
		<mkdir dir="${javadoc.dir}" />
		<javadoc destdir="${javadoc.dir}" author="true" version="true" use="true" windowtitle="TASS API" access="public" classpathref="javadoc.classpath">
			<fileset dir="${src}" defaultexcludes="yes">
			</fileset>
		</javadoc>
	</target>

</project>
