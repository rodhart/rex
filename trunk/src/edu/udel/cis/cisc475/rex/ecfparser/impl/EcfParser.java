package edu.udel.cis.cisc475.rex.ecfparser.impl;

import edu.udel.cis.cisc475.rex.ecfparser.IF.EcfParserIF;
import edu.udel.cis.cisc475.rex.ecfparser.impl.err.EcfParserHackException;
import edu.udel.cis.cisc475.rex.ecfparser.impl.parser.EcfAntlrLexer;
import edu.udel.cis.cisc475.rex.ecfparser.impl.parser.EcfAntlrParser;
import edu.udel.cis.cisc475.rex.config.IF.ConfigIF;
import edu.udel.cis.cisc475.rex.config.IF.ConfigFactoryIF;
import edu.udel.cis.cisc475.rex.config.impl.ConfigFactory;

import java.io.File;
import java.io.IOException;

import org.antlr.runtime.CommonTokenStream;
import org.antlr.runtime.RecognitionException;
import org.antlr.runtime.ANTLRFileStream;
import org.antlr.runtime.ANTLRStringStream;
import org.antlr.runtime.CharStream;



/**
 * 
 * @author cates
 * wrapper for the parser generated by ANTLR3
 */
 

 
public class EcfParser implements EcfParserIF {

  private long seed;
  private boolean pdfOption;
  private int numGeneratedExams;

  public EcfParser(int numGeneratedExams) {
    this.numGeneratedExams = numGeneratedExams;
  }

  public ConfigIF parse(File file) {
    try {
      return this.genericInputParse(new ANTLRFileStream(file.toString()));
    } catch(IOException e) {
      System.out.println("ERROR reading file.");
      return null;
    }
  }
  
  public ConfigIF parseString(String ecfString) {
    return this.genericInputParse(new ANTLRStringStream(ecfString));
  }
  
  public ConfigIF genericInputParse(CharStream stream) {
    ConfigFactoryIF configFactory = new ConfigFactory();
    ConfigIF config = configFactory.newConfig(pdfOption, numGeneratedExams);

    EcfAntlrLexer lexer = new EcfAntlrLexer(stream);
    CommonTokenStream tokens = new CommonTokenStream(lexer);
    EcfAntlrParser g = new EcfAntlrParser(tokens);
    
    try {
      g.ecf(config);
    } catch (EcfParserHackException e) {
			//throw e.releaseTheRex();
			System.err.println("Parse error!");
			System.err.println(e.releaseTheRex().getMessage());
    } catch (RecognitionException e) {
      System.err.println("parse error!");
      System.err.println(e.getMessage());
      return null;
    }
    
    return config;
  }

  public void setPdfOption(boolean pdfOption) {
    this.pdfOption = pdfOption;
  }

  public void setSeed(long seed) {
    this.seed = seed;
  }

}

